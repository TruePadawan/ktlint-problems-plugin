/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details on writing Custom Plugins, please refer to https://docs.gradle.org/8.13/userguide/custom_plugins.html in the Gradle documentation.
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    `java-gradle-plugin`

    // Apply the Kotlin JVM plugin to add support for Kotlin.
    alias(libs.plugins.kotlin.jvm)

    `maven-publish`
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the Kotlin JUnit 5 integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    compileOnly("com.pinterest.ktlint:ktlint-rule-engine:1.5.0")
    compileOnly("com.pinterest.ktlint:ktlint-ruleset-standard:1.5.0")
}

gradlePlugin {
    // Define the plugin
    plugins.register("ktlintProblems") {
        id = "com.github.truepadawan.ktlint.problems"
        implementationClass = "com.github.truepadawan.ktlint.problems.KtlintProblemsPlugin"
        displayName = "Ktlint Gradle Problems API plugin"
        description = "This plugin reports Ktlint lint errors through Gradle's Problems API"
    }
}

publishing {
    repositories {
        maven {
            url = uri(layout.buildDirectory.dir("maven-repo"))
        }
    }
    publications {
        register<MavenPublication>("ktlintProblems") {
            groupId = "com.github.truepadawan"
            artifactId = "ktlint.problems"
            version = "1.0.0-SNAPSHOT"
            from(components["kotlin"])
        }
    }
}

tasks.named<Test>("test") {
    // Use JUnit Jupiter for unit tests.
    useJUnitPlatform()
}
